"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Executes a piece of javascript code in global scope while passing the `require` function
 * @param body The JavaScript to execute
 */
function evalGlobal(body) {
    var fn = new Function('require', body);
    fn(require);
}
exports.evalGlobal = evalGlobal;
function serializeArguments(mochaOptions) {
    var args = [];
    Object.keys(mochaOptions).forEach(function (key) {
        args.push("--" + key);
        var value = mochaOptions[key];
        if (typeof value === 'string') {
            args.push(value);
        }
        else if (Array.isArray(value)) {
            args.push(value.join(','));
        }
    });
    return args;
}
exports.serializeArguments = serializeArguments;
exports.mochaOptionsKey = 'mochaOptions';
var SUPPORTED_MOCHA_OPTIONS = Object.freeze([
    'extension',
    'require',
    'timeout',
    'async-only',
    'ui',
    'grep',
    'exclude',
    'spec',
    'file'
]);
/**
 * Filter out those config values that are actually useful to run mocha with Stryker
 * @param rawConfig The raw parsed mocha configuration
 */
function filterConfig(rawConfig) {
    var options = {};
    Object.keys(rawConfig)
        .filter(function (rawOption) { return SUPPORTED_MOCHA_OPTIONS.some(function (supportedOption) { return rawOption === supportedOption; }); })
        .forEach(function (option) { return options[option] = rawConfig[option]; });
    // Config file can also contain positional arguments. They are provided under the `_` key
    // For example:
    // When mocha.opts contains "--async-only test/**/*.js", then "test/**/*.js will be the positional argument
    // We must provide it to mocha as "spec"
    if (rawConfig._ && rawConfig._.length) {
        if (!options.spec) {
            options.spec = [];
        }
        var specs_1 = options.spec;
        rawConfig._.forEach(function (positionalArgument) { return specs_1.push(positionalArgument); });
    }
    return options;
}
exports.filterConfig = filterConfig;
//# sourceMappingURL=utils.js.map