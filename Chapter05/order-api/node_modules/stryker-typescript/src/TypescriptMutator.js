"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var flatMap = require("lodash.flatmap");
var tsHelpers_1 = require("./helpers/tsHelpers");
var BinaryExpressionMutator_1 = require("./mutator/BinaryExpressionMutator");
var BooleanSubstitutionMutator_1 = require("./mutator/BooleanSubstitutionMutator");
var ArrayLiteralMutator_1 = require("./mutator/ArrayLiteralMutator");
var ArrayNewExpressionMutator_1 = require("./mutator/ArrayNewExpressionMutator");
var BlockMutator_1 = require("./mutator/BlockMutator");
var IfStatementMutator_1 = require("./mutator/IfStatementMutator");
var ObjectLiteralMutator_1 = require("./mutator/ObjectLiteralMutator");
var WhileStatementMutator_1 = require("./mutator/WhileStatementMutator");
var ForStatementMutator_1 = require("./mutator/ForStatementMutator");
var DoStatementMutator_1 = require("./mutator/DoStatementMutator");
var ConditionalExpressionMutator_1 = require("./mutator/ConditionalExpressionMutator");
var PrefixUnaryExpressionMutator_1 = require("./mutator/PrefixUnaryExpressionMutator");
var ArrowFunctionMutator_1 = require("./mutator/ArrowFunctionMutator");
var StringLiteralMutator_1 = require("./mutator/StringLiteralMutator");
var SwitchCaseMutator_1 = require("./mutator/SwitchCaseMutator");
var TypescriptMutator = /** @class */ (function () {
    function TypescriptMutator(config, mutators) {
        if (mutators === void 0) { mutators = [
            new BinaryExpressionMutator_1.default(),
            new BooleanSubstitutionMutator_1.default(),
            new ArrayLiteralMutator_1.default(),
            new ArrayNewExpressionMutator_1.default(),
            new BlockMutator_1.default(),
            new ArrowFunctionMutator_1.default(),
            new IfStatementMutator_1.default(),
            new ObjectLiteralMutator_1.default(),
            new WhileStatementMutator_1.default(),
            new ForStatementMutator_1.default(),
            new DoStatementMutator_1.default(),
            new ConditionalExpressionMutator_1.default(),
            new PrefixUnaryExpressionMutator_1.default(),
            new StringLiteralMutator_1.default(),
            new SwitchCaseMutator_1.default(),
        ]; }
        this.config = config;
        this.mutators = mutators;
    }
    TypescriptMutator.prototype.mutate = function (inputFiles) {
        var _this = this;
        var tsConfig = tsHelpers_1.getTSConfig(this.config);
        var mutants = flatMap(inputFiles, function (inputFile) {
            var sourceFile = tsHelpers_1.parseFile(inputFile, tsConfig && tsConfig.options && tsConfig.options.target);
            return _this.mutateForNode(sourceFile, sourceFile);
        });
        return mutants;
    };
    TypescriptMutator.prototype.mutateForNode = function (node, sourceFile) {
        var _this = this;
        var targetMutators = this.mutators.filter(function (mutator) { return mutator.guard(node); });
        var mutants = flatMap(targetMutators, function (mutator) { return mutator.mutate(node, sourceFile); });
        node.forEachChild(function (child) {
            // It is important that forEachChild does not return a true, otherwise node visiting is halted!
            mutants.push.apply(mutants, _this.mutateForNode(child, sourceFile));
        });
        return mutants;
    };
    return TypescriptMutator;
}());
exports.default = TypescriptMutator;
//# sourceMappingURL=TypescriptMutator.js.map