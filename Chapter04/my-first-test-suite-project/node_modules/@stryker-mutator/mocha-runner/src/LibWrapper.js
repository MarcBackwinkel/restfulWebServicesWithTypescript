"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Mocha = require("mocha");
const multimatch = require("multimatch");
let loadOptions;
let handleFiles;
let handleRequires;
let loadRootHooks;
try {
    /*
     * If read, object containing parsed arguments
     * @since 6.0.0'
     * @see https://mochajs.org/api/module-lib_cli_options.html#.loadOptions
     */
    loadOptions = require('mocha/lib/cli/options').loadOptions;
}
catch (_a) {
    // Mocha < 6 doesn't support `loadOptions`
}
try {
    // https://github.com/mochajs/mocha/blob/master/lib/cli/run-helpers.js#L132
    const runHelpers = require('mocha/lib/cli/run-helpers');
    handleFiles = runHelpers.handleFiles;
    handleRequires = runHelpers.handleRequires; // handleRequires is available since mocha v7.2
    loadRootHooks = runHelpers.loadRootHooks; // loadRootHooks is available since mocha v7.2
    if (!handleFiles) {
        // Might be moved: https://github.com/mochajs/mocha/commit/15b96afccaf508312445770e3af1c145d90b28c6#diff-39b692a81eb0c9f3614247af744ab4a8
        handleFiles = require('mocha/lib/cli/collect-files');
    }
}
catch (_b) {
    // Mocha < 6 doesn't support `handleFiles`
}
/**
 * Wraps Mocha class and require for testability
 */
class LibWrapper {
}
exports.default = LibWrapper;
LibWrapper.Mocha = Mocha;
LibWrapper.require = require;
LibWrapper.multimatch = multimatch;
LibWrapper.loadOptions = loadOptions;
LibWrapper.handleFiles = handleFiles;
LibWrapper.handleRequires = handleRequires;
LibWrapper.loadRootHooks = loadRootHooks;
//# sourceMappingURL=LibWrapper.js.map