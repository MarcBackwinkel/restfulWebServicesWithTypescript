document.querySelector('mutation-test-report-app').report = {"files":{"/workspace/restfulWebServicesWithTypescript/Chapter04/my-first-suite-test-project/src/Queue.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":29,"line":2},"start":{"column":27,"line":2}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"CompileError"},{"id":"1","location":{"end":{"column":43,"line":4},"start":{"column":41,"line":4}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"CompileError"},{"id":"2","location":{"end":{"column":6,"line":6},"start":{"column":44,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"4","location":{"end":{"column":6,"line":14},"start":{"column":26,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"5","location":{"end":{"column":6,"line":18},"start":{"column":24,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"3","location":{"end":{"column":6,"line":10},"start":{"column":17,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"6","location":{"end":{"column":33,"line":17},"start":{"column":16,"line":17}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"7","location":{"end":{"column":33,"line":17},"start":{"column":16,"line":17}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"9","location":{"end":{"column":6,"line":22},"start":{"column":20,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"8","location":{"end":{"column":31,"line":17},"start":{"column":28,"line":17}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Killed"}],"source":"export class Queue<T> {\n    private _store: T[] = [];\n\n    constructor(initialData: Array<T> = []){\n        this._store.push(...initialData);\n    }\n\n    push(val: T){\n        this._store.push(val);\n    }\n\n    pop(): T | undefined {\n        return this._store.shift();\n    }\n\n    isEmpty(): boolean {\n        return this.size() === 0;\n    }\n\n    size(): number {\n        return this._store.length;\n    }\n}"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};